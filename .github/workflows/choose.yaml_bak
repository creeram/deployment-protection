name: Use Production Version In Staging/Rollback To Staging Version

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Select release type for patching ImagePolicy"
        required: true
        type: choice
        options:
          - use_prod_tag
          - use_stage_tag

jobs:
  patch-imagepolicy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          mv kubectl /usr/local/bin/

      - name: Apply ImagePolicy Patch
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          if [[ "${{ github.event.inputs.release_type }}" == "use_prod_tag" ]]; then
            cat <<EOF | kubectl apply -f -
            apiVersion: image.toolkit.fluxcd.io/v1beta2
            kind: ImagePolicy
            metadata:
              name: plinko-client
              namespace: staging
            spec:
              imageRepositoryRef:
                name: plinko-client
              filterTags:
                pattern: '^[vV](?P<major>\d+)\.(?P<minor>\d+)\.0(-hotfix\.\d+)?\.(?P<timestamp>\d{14})$'
                extract: '${major}.${minor}.0'
              policy:
                semver:
                  range: 'x.x.0'
            EOF
          elif [[ "${{ github.event.inputs.release_type }}" == "use_normal_release" ]]; then
            cat <<EOF | kubectl apply -f -
            apiVersion: image.toolkit.fluxcd.io/v1beta2
            kind: ImagePolicy
            metadata:
              name: plinko-client
              namespace: staging
            spec:
              imageRepositoryRef:
                name: plinko-client
              filterTags:
                pattern: '^(branch-[^.]*)\.(?P<timestamp>\d{14})$|^[vV](?P<version>\d+\.\d+\.\d+(-hotfix\.\d+)?)\.(?P<timestamp>\d{14})$'
              policy:
                alphabetical:
                  order: asc
            EOF
          fi
